{"version":3,"file":"typescript.js","names":["_kleur","_interopRequireDefault","require","_path","_fsExtra","_which","_crossSpawn","_del","_json","_os","e","__esModule","default","build","source","root","output","report","options","info","kleur","blue","path","relative","del","project","tsconfig","join","fs","pathExists","config","JSON5","parse","readFile","compilerOptions","conflicts","declarationDir","push","outDir","length","warn","reduce","acc","curr","gray","yellow","Error","tsc","resolve","execpath","process","env","npm_execpath","cli","split","pop","includes","result","spawn","sync","stdio","encoding","cwd","stdout","trim","platform","endsWith","which","tsbuildinfo","replace","outputs","esm","commonjs","module","status","copy","writeJSON","type","success","pkg","JSON","fields","name","value","types","error","exports","import","getGeneratedTypesPath","field","indexDTsName","basename","potentialPaths","dirname","potentialPath","invalidFieldNames","Promise","all","map","startsWith","test","generatedTypesPath","filter","validFields","every","suggestedTypesPaths","i","self","indexOf","toString","message"],"sources":["../../src/targets/typescript.ts"],"sourcesContent":["import kleur from 'kleur';\nimport path from 'path';\nimport fs from 'fs-extra';\nimport which from 'which';\nimport spawn from 'cross-spawn';\nimport del from 'del';\nimport JSON5 from 'json5';\nimport { platform } from 'os';\nimport type { Input } from '../types';\n\ntype Options = Input & {\n  options?: {\n    esm?: boolean;\n    project?: string;\n    tsc?: string;\n  };\n};\n\ntype Field = {\n  name: string;\n  value: string | undefined;\n  output: string | undefined;\n  error: boolean;\n};\n\nexport default async function build({\n  source,\n  root,\n  output,\n  report,\n  options,\n}: Options) {\n  report.info(\n    `Cleaning up previous build at ${kleur.blue(path.relative(root, output))}`\n  );\n\n  await del([output]);\n\n  report.info(`Generating type definitions with ${kleur.blue('tsc')}`);\n\n  const project = options?.project ? options.project : 'tsconfig.json';\n  const tsconfig = path.join(root, project);\n\n  try {\n    if (await fs.pathExists(tsconfig)) {\n      try {\n        const config = JSON5.parse(await fs.readFile(tsconfig, 'utf-8'));\n\n        if (config.compilerOptions) {\n          const conflicts: string[] = [];\n\n          if (config.compilerOptions.declarationDir) {\n            conflicts.push('compilerOptions.declarationDir');\n          }\n\n          if (\n            config.compilerOptions.outDir &&\n            path.join(root, config.compilerOptions.outDir) !== output\n          ) {\n            conflicts.push('compilerOptions.outDir');\n          }\n\n          if (conflicts.length) {\n            report.warn(\n              `Found following options in the config file which can conflict with the CLI options. Please remove them from ${kleur.blue(\n                project\n              )}:${conflicts.reduce(\n                (acc, curr) =>\n                  acc + `\\n${kleur.gray('-')} ${kleur.yellow(curr)}`,\n                ''\n              )}`\n            );\n          }\n        }\n      } catch (e) {\n        report.warn(\n          `Couldn't parse '${project}'. There might be validation errors.`\n        );\n      }\n    } else {\n      throw new Error(\n        `Couldn't find a ${kleur.blue('tsconfig.json')} in the project root.`\n      );\n    }\n\n    let tsc;\n\n    if (options?.tsc) {\n      tsc = path.resolve(root, options.tsc);\n\n      if (!(await fs.pathExists(tsc))) {\n        throw new Error(\n          `The ${kleur.blue(\n            'tsc'\n          )} binary doesn't seem to be installed at ${kleur.blue(\n            tsc\n          )}. Please specify the correct path in options or remove it to use the workspace's version.`\n        );\n      }\n    } else {\n      const execpath = process.env.npm_execpath;\n      const cli = execpath?.split('/').pop()?.includes('yarn') ? 'yarn' : 'npm';\n\n      if (cli === 'yarn') {\n        const result = spawn.sync('yarn', ['bin', 'tsc'], {\n          stdio: 'pipe',\n          encoding: 'utf-8',\n          cwd: root,\n        });\n\n        tsc = result.stdout.trim();\n      } else {\n        tsc = path.resolve(root, 'node_modules', '.bin', 'tsc');\n      }\n\n      if (platform() === 'win32' && !tsc.endsWith('.cmd')) {\n        tsc += '.cmd';\n      }\n    }\n\n    if (!(await fs.pathExists(tsc))) {\n      try {\n        tsc = await which('tsc');\n\n        if (await fs.pathExists(tsc)) {\n          report.warn(\n            `Failed to locate ${kleur.blue(\n              'tsc'\n            )} in the workspace. Falling back to the binary found in ${kleur.blue(\n              'PATH'\n            )} at ${kleur.blue(tsc)}. Consider adding ${kleur.blue(\n              'typescript'\n            )} to your ${kleur.blue(\n              'devDependencies'\n            )} or specifying the ${kleur.blue(\n              'tsc'\n            )} option for the typescript target.`\n          );\n        }\n      } catch (e) {\n        // Ignore\n      }\n    }\n\n    if (tsc == null || !(await fs.pathExists(tsc))) {\n      throw new Error(\n        `The ${kleur.blue(\n          'tsc'\n        )} binary doesn't seem to be installed under ${kleur.blue(\n          'node_modules'\n        )} or present in $PATH. Make sure you have added ${kleur.blue(\n          'typescript'\n        )} to your ${kleur.blue('devDependencies')} or specify the ${kleur.blue(\n          'tsc'\n        )} option for typescript.`\n      );\n    }\n\n    const tsbuildinfo = path.join(\n      output,\n      project.replace(/\\.json$/, '.tsbuildinfo')\n    );\n\n    try {\n      await del([tsbuildinfo]);\n    } catch (e) {\n      // Ignore\n    }\n\n    const outputs = options?.esm\n      ? {\n          commonjs: path.join(output, 'commonjs'),\n          module: path.join(output, 'module'),\n        }\n      : { commonjs: output };\n\n    const result = spawn.sync(\n      tsc,\n      [\n        '--pretty',\n        '--declaration',\n        '--declarationMap',\n        '--noEmit',\n        'false',\n        '--emitDeclarationOnly',\n        '--project',\n        project,\n        '--outDir',\n        outputs.commonjs,\n      ],\n      {\n        stdio: 'inherit',\n        cwd: root,\n      }\n    );\n\n    if (result.status === 0) {\n      await del([tsbuildinfo]);\n\n      if (outputs?.module) {\n        // When ESM compatible output is enabled, we need to generate 2 builds for commonjs and esm\n        // In this case we copy the already generated types, and add `package.json` with `type` field\n        await fs.copy(outputs.commonjs, outputs.module);\n        await fs.writeJSON(path.join(outputs.commonjs, 'package.json'), {\n          type: 'commonjs',\n        });\n        await fs.writeJSON(path.join(outputs.module, 'package.json'), {\n          type: 'module',\n        });\n      }\n\n      report.success(\n        `Wrote definition files to ${kleur.blue(path.relative(root, output))}`\n      );\n\n      const pkg = JSON.parse(\n        await fs.readFile(path.join(root, 'package.json'), 'utf-8')\n      );\n\n      const fields: Field[] = [\n        {\n          name: 'types',\n          value: pkg.types,\n          output: outputs.commonjs,\n          error: false,\n        },\n        ...(pkg.exports?.['.']?.types\n          ? [\n              {\n                name: \"exports['.'].types\",\n                value: pkg.exports?.['.']?.types,\n                output: outputs.commonjs,\n                error: options?.esm === true,\n              },\n            ]\n          : []),\n        {\n          name: \"exports['.'].import.types\",\n          value: pkg.exports?.['.']?.import?.types,\n          output: outputs.module,\n          error: !options?.esm,\n        },\n        {\n          name: \"exports['.'].require.types\",\n          value: pkg.exports?.['.']?.require?.types,\n          output: outputs.commonjs,\n          error: !options?.esm,\n        },\n      ];\n\n      const getGeneratedTypesPath = async (field: Field) => {\n        if (!field.output || field.error) {\n          return null;\n        }\n\n        if (pkg.source) {\n          const indexDTsName =\n            path.basename(pkg.source).replace(/\\.(jsx?|tsx?)$/, '') + '.d.ts';\n\n          const potentialPaths = [\n            path.join(field.output, path.dirname(pkg.source), indexDTsName),\n            path.join(\n              field.output,\n              path.relative(source, path.join(root, path.dirname(pkg.source))),\n              indexDTsName\n            ),\n          ];\n\n          for (const potentialPath of potentialPaths) {\n            if (await fs.pathExists(potentialPath)) {\n              return path.relative(root, potentialPath);\n            }\n          }\n        }\n\n        return null;\n      };\n\n      const invalidFieldNames = (\n        await Promise.all(\n          fields.map(async (field) => {\n            if (field.error) {\n              if (field.value) {\n                report.warn(\n                  `The ${kleur.blue(field.name)} field in ${kleur.blue(\n                    `package.json`\n                  )} should not be set when the ${kleur.blue(\n                    'esm'\n                  )} option is ${options?.esm ? 'enabled' : 'disabled'}.`\n                );\n              }\n\n              return null;\n            }\n\n            if (\n              field.name.startsWith('exports') &&\n              field.value &&\n              !/^\\.\\//.test(field.value)\n            ) {\n              report.error(\n                `The ${kleur.blue(field.name)} field in ${kleur.blue(\n                  `package.json`\n                )} should be a relative path starting with ${kleur.blue(\n                  './'\n                )}. Found: ${kleur.blue(field.value)}`\n              );\n\n              return field.name;\n            }\n\n            if (\n              field.value &&\n              !(await fs.pathExists(path.join(root, field.value)))\n            ) {\n              const generatedTypesPath = await getGeneratedTypesPath(field);\n\n              report.error(\n                `The ${kleur.blue(field.name)} field in ${kleur.blue(\n                  'package.json'\n                )} points to a non-existent file: ${kleur.blue(\n                  field.value\n                )}.\\nVerify the path points to the correct file under ${kleur.blue(\n                  path.relative(root, output)\n                )}${\n                  generatedTypesPath\n                    ? ` (found ${kleur.blue(generatedTypesPath)}).`\n                    : '.'\n                }`\n              );\n\n              return field.name;\n            }\n\n            return null;\n          })\n        )\n      ).filter((name): name is string => name != null);\n\n      if (invalidFieldNames.length) {\n        throw new Error(\n          `Found errors for fields: ${invalidFieldNames.join(', ')}.`\n        );\n      }\n\n      const validFields = fields.filter((field) => !field.error);\n\n      if (validFields.every((field) => field.value == null)) {\n        const suggestedTypesPaths = (\n          await Promise.all(\n            validFields.map((field) => getGeneratedTypesPath(field))\n          )\n        )\n          .filter((path): path is string => path != null)\n          .filter((path, i, self) => self.indexOf(path) === i);\n\n        report.warn(\n          `No ${validFields\n            .map((field) => kleur.blue(field.name))\n            .join(' or ')} field found in ${kleur.blue(\n            'package.json'\n          )}. Consider ${\n            suggestedTypesPaths.length\n              ? `pointing to ${suggestedTypesPaths\n                  .map((path) => kleur.blue(path))\n                  .join(' or ')}`\n              : `adding ${validFields.length > 1 ? 'them' : 'it'}`\n          } so that consumers of your package can use the typescript definitions.`\n        );\n      }\n    } else {\n      throw new Error('Failed to build definition files.');\n    }\n  } catch (e: unknown) {\n    if (e != null && typeof e === 'object') {\n      if ('stdout' in e && e.stdout != null) {\n        report.error(\n          `Errors found when building definition files:\\n${e.stdout.toString()}`\n        );\n      } else if ('message' in e && typeof e.message === 'string') {\n        report.error(e.message);\n      } else {\n        throw e;\n      }\n    } else {\n      throw e;\n    }\n\n    throw new Error('Failed to build definition files.');\n  }\n}\n"],"mappings":"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","ignoreList":[]}