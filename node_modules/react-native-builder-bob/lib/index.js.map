{"version":3,"file":"index.js","names":["_path","_interopRequireDefault","require","_fsExtra","_kleur","_dedent","_yargs","_cosmiconfig","_isGitDirty","_prompts","logger","_interopRequireWildcard","_commonjs","_module","_typescript","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","name","version","root","process","cwd","explorer","cosmiconfig","stopDir","searchPlaces","FLOW_PRGAMA_REGEX","yargs","command","isGitDirty","shouldContinue","prompts","type","message","initial","exit","pak","path","join","fs","pathExists","pkg","JSON","parse","readFile","result","search","config","devDependencies","source","validate","input","Boolean","entryFile","fromEntries","entries","sort","b","localeCompare","questions","choices","title","value","selected","test","length","endsWith","push","keys","includes","output","targets","flow","target","undefined","esm","main","module","types","import","tsconfig","writeJSON","compilerOptions","rootDir","allowUnreachableCode","allowUnusedLabels","esModuleInterop","forceConsistentCasingInFileNames","jsx","lib","moduleResolution","noFallthroughCasesInSwitch","noImplicitReturns","noImplicitUseStrict","noStrictGenericChecks","noUncheckedIndexedAccess","noUnusedLocals","noUnusedParameters","resolveJsonModule","skipLibCheck","strict","verbatimModuleSyntax","spaces","prepare","files","key","entry","replace","exports","stringify","startsWith","remove","scripts","pkgFiles","some","file","update","filter","map","copyFlow","jest","modulePathIgnorePatterns","eslintIgnore","ignorefiles","ignorefile","content","split","writeFile","packageManager","console","log","dedent","kleur","yellow","magenta","bold","gray","argv","$0","options","relative","filepath","exclude","report","info","warn","error","success","targetName","Array","isArray","targetOptions","blue","buildCommonJS","resolve","buildModule","buildTypescript","demandCommand","recommendCommands"],"sources":["../src/index.ts"],"sourcesContent":["import path from 'path';\nimport fs from 'fs-extra';\nimport kleur from 'kleur';\nimport dedent from 'dedent';\nimport yargs from 'yargs';\nimport { cosmiconfig } from 'cosmiconfig';\nimport isGitDirty from 'is-git-dirty';\nimport prompts, { type PromptObject } from './utils/prompts';\nimport * as logger from './utils/logger';\nimport buildCommonJS from './targets/commonjs';\nimport buildModule from './targets/module';\nimport buildTypescript from './targets/typescript';\nimport type { Options } from './types';\n\n// eslint-disable-next-line import/no-commonjs, @typescript-eslint/no-var-requires\nconst { name, version } = require('../package.json');\n\nconst root = process.cwd();\nconst explorer = cosmiconfig(name, {\n  stopDir: root,\n  searchPlaces: [\n    'package.json',\n    'bob.config.mjs',\n    'bob.config.cjs',\n    'bob.config.js',\n  ],\n});\n\nconst FLOW_PRGAMA_REGEX = /\\*?\\s*@(flow)\\b/m;\n\nyargs\n  .command('init', 'configure the package to use bob', {}, async () => {\n    if (isGitDirty()) {\n      const { shouldContinue } = await prompts({\n        type: 'confirm',\n        name: 'shouldContinue',\n        message: `The working directory is not clean.\\n  You should commit or stash your changes before configuring bob.\\n  Continue anyway?`,\n        initial: false,\n      });\n\n      if (!shouldContinue) {\n        process.exit(0);\n      }\n    }\n\n    const pak = path.join(root, 'package.json');\n\n    if (!(await fs.pathExists(pak))) {\n      logger.exit(\n        `Couldn't find a 'package.json' file in '${root}'.\\n  Are you in a project folder?`\n      );\n    }\n\n    const pkg = JSON.parse(await fs.readFile(pak, 'utf-8'));\n    const result = await explorer.search();\n\n    if (result?.config && pkg.devDependencies && name in pkg.devDependencies) {\n      const { shouldContinue } = await prompts({\n        type: 'confirm',\n        name: 'shouldContinue',\n        message: `The project seems to be already configured with bob.\\n  Do you want to overwrite the existing configuration?`,\n        initial: false,\n      });\n\n      if (!shouldContinue) {\n        process.exit(0);\n      }\n    }\n\n    const { source } = await prompts({\n      type: 'text',\n      name: 'source',\n      message: 'Where are your source files?',\n      initial: 'src',\n      validate: (input) => Boolean(input),\n    });\n\n    let entryFile;\n\n    if (await fs.pathExists(path.join(root, source, 'index.js'))) {\n      entryFile = 'index.js';\n    } else if (await fs.pathExists(path.join(root, source, 'index.ts'))) {\n      entryFile = 'index.ts';\n    } else if (await fs.pathExists(path.join(root, source, 'index.tsx'))) {\n      entryFile = 'index.tsx';\n    }\n\n    if (!entryFile) {\n      logger.exit(\n        `Couldn't find a 'index.js'. 'index.ts' or 'index.tsx' file under '${source}'.\\n  Please re-run the CLI after creating it.`\n      );\n      return;\n    }\n\n    pkg.devDependencies = Object.fromEntries(\n      [\n        ...Object.entries(pkg.devDependencies || {}),\n        [name, `^${version}`],\n      ].sort(([a], [b]) => a.localeCompare(b))\n    );\n\n    const questions: PromptObject[] = [\n      {\n        type: 'text',\n        name: 'output',\n        message: 'Where do you want to generate the output files?',\n        initial: 'lib',\n        validate: (input: string) => Boolean(input),\n      },\n      {\n        type: 'multiselect',\n        name: 'targets',\n        message: 'Which targets do you want to build?',\n        choices: [\n          {\n            title: 'commonjs - for running in Node (tests, SSR etc.)',\n            value: 'commonjs',\n            selected: true,\n          },\n          {\n            title: 'module - for bundlers (metro, webpack etc.)',\n            value: 'module',\n            selected: true,\n          },\n          {\n            title: 'typescript - declaration files for typechecking',\n            value: 'typescript',\n            selected: /\\.tsx?$/.test(entryFile),\n          },\n        ],\n        validate: (input: string) => Boolean(input.length),\n      },\n    ];\n\n    if (\n      entryFile.endsWith('.js') &&\n      FLOW_PRGAMA_REGEX.test(\n        await fs.readFile(path.join(root, source, entryFile), 'utf-8')\n      )\n    ) {\n      questions.push({\n        type: 'confirm',\n        name: 'flow',\n        message: 'Do you want to publish definitions for flow?',\n        initial: Object.keys(pkg.devDependencies || {}).includes('flow-bin'),\n      });\n    }\n\n    const { output, targets, flow } = await prompts(questions);\n\n    const target =\n      targets[0] === 'commonjs' || targets[0] === 'module'\n        ? targets[0]\n        : undefined;\n\n    const entries: {\n      [key in 'source' | 'main' | 'module' | 'types']?: string;\n    } = {\n      source: `./${path.join(source, entryFile)}`,\n    };\n\n    let esm = false;\n\n    if (targets.includes('module')) {\n      esm = true;\n\n      if (targets.includes('commonjs')) {\n        entries.main = `./${path.join(output, 'commonjs', 'index.js')}`;\n      }\n\n      entries.module = `./${path.join(output, 'module', 'index.js')}`;\n    } else if (targets.includes('commonjs')) {\n      entries.main = `./${path.join(output, 'commonjs', 'index.js')}`;\n    } else {\n      entries.main = entries.source;\n    }\n\n    const types: {\n      [key in 'require' | 'import']?: string;\n    } = {};\n\n    if (targets.includes('typescript')) {\n      types.require = `./${path.join(\n        output,\n        'typescript',\n        'commonjs',\n        source,\n        'index.d.ts'\n      )}`;\n\n      types.import = `./${path.join(\n        output,\n        'typescript',\n        'module',\n        source,\n        'index.d.ts'\n      )}`;\n\n      entries.types = types.require;\n\n      if (!(await fs.pathExists(path.join(root, 'tsconfig.json')))) {\n        const { tsconfig } = await prompts({\n          type: 'confirm',\n          name: 'tsconfig',\n          message: `You have enabled 'typescript' compilation, but we couldn't find a 'tsconfig.json' in project root.\\n  Generate one?`,\n          initial: true,\n        });\n\n        if (tsconfig) {\n          await fs.writeJSON(\n            path.join(root, 'tsconfig.json'),\n            {\n              compilerOptions: {\n                rootDir: '.',\n                allowUnreachableCode: false,\n                allowUnusedLabels: false,\n                esModuleInterop: true,\n                forceConsistentCasingInFileNames: true,\n                jsx: 'react-jsx',\n                lib: ['ESNext'],\n                module: 'ESNext',\n                moduleResolution: 'Bundler',\n                noFallthroughCasesInSwitch: true,\n                noImplicitReturns: true,\n                noImplicitUseStrict: false,\n                noStrictGenericChecks: false,\n                noUncheckedIndexedAccess: true,\n                noUnusedLocals: true,\n                noUnusedParameters: true,\n                resolveJsonModule: true,\n                skipLibCheck: true,\n                strict: true,\n                target: 'ESNext',\n                verbatimModuleSyntax: true,\n              },\n            },\n            { spaces: 2 }\n          );\n        }\n      }\n    }\n\n    const prepare = 'bob build';\n    const files = [\n      source,\n      output,\n      '!**/__tests__',\n      '!**/__fixtures__',\n      '!**/__mocks__',\n    ];\n\n    for (const key in entries) {\n      const entry = entries[key as keyof typeof entries];\n\n      if (pkg[key] && pkg[key] !== entry) {\n        const { replace } = await prompts({\n          type: 'confirm',\n          name: 'replace',\n          message: `Your package.json has the '${key}' field set to '${pkg[key]}'.\\n  Do you want to replace it with '${entry}'?`,\n          initial: true,\n        });\n\n        if (replace) {\n          pkg[key] = entry;\n        }\n      } else {\n        pkg[key] = entry;\n      }\n    }\n\n    if (esm) {\n      let replace = false;\n\n      const exports = {\n        '.': {\n          import: {\n            ...(types.import ? { types: types.import } : null),\n            ...(entries.module ? { default: entries.module } : null),\n          },\n          require: {\n            ...(types.require ? { types: types.require } : null),\n            ...(entries.main ? { default: entries.main } : null),\n          },\n        },\n      };\n\n      if (\n        pkg.exports &&\n        JSON.stringify(pkg.exports) !== JSON.stringify(exports)\n      ) {\n        replace = (\n          await prompts({\n            type: 'confirm',\n            name: 'replace',\n            message: `Your package.json has 'exports' field set.\\n  Do you want to replace it?`,\n            initial: true,\n          })\n        ).replace;\n      } else {\n        replace = true;\n      }\n\n      if (replace) {\n        pkg.exports = exports;\n      }\n    }\n\n    if (\n      pkg['react-native'] &&\n      (pkg['react-native'].startsWith(source) ||\n        pkg['react-native'].startsWith(`./${source}`))\n    ) {\n      const { remove } = await prompts({\n        type: 'confirm',\n        name: 'remove',\n        message: `Your package.json has the 'react-native' field pointing to source code.\\n  This can cause problems when customizing babel configuration.\\n  Do you want to remove it?`,\n        initial: true,\n      });\n\n      if (remove) {\n        delete pkg['react-native'];\n      }\n    }\n\n    if (pkg.scripts?.prepare && pkg.scripts.prepare !== prepare) {\n      const { replace } = await prompts({\n        type: 'confirm',\n        name: 'replace',\n        message: `Your package.json has the 'scripts.prepare' field set to '${pkg.scripts.prepare}'.\\n  Do you want to replace it with '${prepare}'?`,\n        initial: true,\n      });\n\n      if (replace) {\n        pkg.scripts.prepare = prepare;\n      }\n    } else {\n      pkg.scripts = pkg.scripts || {};\n      pkg.scripts.prepare = prepare;\n    }\n\n    if (pkg.files) {\n      const pkgFiles = pkg.files;\n\n      if (files?.some((file) => !pkgFiles.includes(file))) {\n        const { update } = await prompts({\n          type: 'confirm',\n          name: 'update',\n          message: `Your package.json already has a 'files' field.\\n  Do you want to update it?`,\n          initial: true,\n        });\n\n        if (update) {\n          pkg.files = [\n            ...files,\n            ...pkg.files.filter((file: string) => !files.includes(file)),\n          ];\n        }\n      }\n    } else {\n      pkg.files = files;\n    }\n\n    pkg[name] = {\n      source,\n      output,\n      targets: targets.map((t: string) => {\n        if (t === target && flow) {\n          return [t, { copyFlow: true }];\n        }\n\n        if (t === 'commonjs' || t === 'module' || t === 'typescript') {\n          return [t, { esm }];\n        }\n\n        return t;\n      }),\n    };\n\n    if (pkg.jest) {\n      const entry = `<rootDir>/${output}/`;\n\n      if (pkg.jest.modulePathIgnorePatterns) {\n        const { modulePathIgnorePatterns } = pkg.jest;\n\n        if (!modulePathIgnorePatterns.includes(entry)) {\n          modulePathIgnorePatterns.push(entry);\n        }\n      } else {\n        pkg.jest.modulePathIgnorePatterns = [entry];\n      }\n    }\n\n    pkg.eslintIgnore = pkg.eslintIgnore || ['node_modules/'];\n\n    if (!pkg.eslintIgnore.includes(`${output}/`)) {\n      pkg.eslintIgnore.push(`${output}/`);\n    }\n\n    await fs.writeJSON(pak, pkg, {\n      spaces: 2,\n    });\n\n    const ignorefiles = [\n      path.join(root, '.gitignore'),\n      path.join(root, '.eslintignore'),\n    ];\n\n    for (const ignorefile of ignorefiles) {\n      if (await fs.pathExists(ignorefile)) {\n        const content = await fs.readFile(ignorefile, 'utf-8');\n\n        if (!content.split('\\n').includes(`${output}/`)) {\n          await fs.writeFile(\n            ignorefile,\n            `${content}\\n# generated by bob\\n${output}/\\n`\n          );\n        }\n      }\n    }\n\n    const packageManager = (await fs.pathExists(path.join(root, 'yarn.lock')))\n      ? 'yarn'\n      : 'npm';\n\n    console.log(\n      dedent(`\n      Project ${kleur.yellow(pkg.name)} configured successfully!\n\n      ${kleur.magenta(\n        `${kleur.bold('Perform last steps')} by running`\n      )}${kleur.gray(':')}\n\n        ${kleur.gray('$')} ${packageManager} install\n\n      ${kleur.yellow('Good luck!')}\n    `)\n    );\n  })\n  .command('build', 'build files for publishing', {}, async (argv) => {\n    const result = await explorer.search();\n\n    if (!result?.config) {\n      logger.exit(\n        `No configuration found. Run '${argv.$0} init' to create one automatically.`\n      );\n    }\n\n    const options: Options = result!.config;\n\n    if (!options.targets?.length) {\n      logger.exit(\n        `No targets found in the configuration in '${path.relative(\n          root,\n          result!.filepath\n        )}'.`\n      );\n    }\n\n    const source = options.source;\n\n    if (!source) {\n      logger.exit(\n        `No source option found in the configuration in '${path.relative(\n          root,\n          result!.filepath\n        )}'.`\n      );\n    }\n\n    const output = options.output;\n\n    if (!output) {\n      logger.exit(\n        `No source option found in the configuration in '${path.relative(\n          root,\n          result!.filepath\n        )}'.`\n      );\n    }\n\n    const exclude =\n      options.exclude ?? '**/{__tests__,__fixtures__,__mocks__}/**';\n\n    const report = {\n      info: logger.info,\n      warn: logger.warn,\n      error: logger.error,\n      success: logger.success,\n    };\n\n    for (const target of options.targets!) {\n      const targetName = Array.isArray(target) ? target[0] : target;\n      const targetOptions = Array.isArray(target) ? target[1] : undefined;\n\n      report.info(`Building target ${kleur.blue(targetName)}`);\n\n      switch (targetName) {\n        case 'commonjs':\n          await buildCommonJS({\n            root,\n            source: path.resolve(root, source as string),\n            output: path.resolve(root, output as string, 'commonjs'),\n            exclude,\n            options: targetOptions,\n            report,\n          });\n          break;\n        case 'module':\n          await buildModule({\n            root,\n            source: path.resolve(root, source as string),\n            output: path.resolve(root, output as string, 'module'),\n            exclude,\n            options: targetOptions,\n            report,\n          });\n          break;\n        case 'typescript':\n          await buildTypescript({\n            root,\n            source: path.resolve(root, source as string),\n            output: path.resolve(root, output as string, 'typescript'),\n            options: targetOptions,\n            report,\n          });\n          break;\n        default:\n          logger.exit(`Invalid target ${kleur.blue(targetName)}.`);\n      }\n    }\n  })\n  .demandCommand()\n  .recommendCommands()\n  .strict().argv;\n"],"mappings":"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","ignoreList":[]}